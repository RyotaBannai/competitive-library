name: CI

on:
  schedule:
    - cron: '0 0 */6 * *'
  push:
    branches:
      - master
  pull_request:


jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - stable-x86_64-unknown-linux-gnu
          - nightly-x86_64-unknown-linux-gnu

    name: Build (${{ matrix.toolchain }})
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Python dependencies
      run: |
        curl -LJO https://raw.githubusercontent.com/yosupo06/library-checker-problems/master/requirements.txt
        pip install -r requirements.txt

    - name: Setup `${{ matrix.toolchain }}`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        override: true
        profile: minimal
        components: rustfmt, clippy

    - name: Cache
      uses: Swatinem/rust-cache@v2

    - name: cargo-fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: cargo-clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --lib --tests

    - name: cargo-build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --workspace --lib --tests

    - name: cargo-test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace --no-fail-fast


  snippet:
    name: Snippet
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup `1.42.0-x86_64-unknown-linux-gnu`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.42.0-x86_64-unknown-linux-gnu
        override: false
        profile: minimal

    - name: Setup `stable-x86_64-unknown-linux-gnu`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-x86_64-unknown-linux-gnu
        override: true
        profile: minimal
        components: rustfmt

    - name: Cache
      uses: Swatinem/rust-cache@v2

    - name: cargo-install codesnip
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: codesnip
      env:
        CARGO_TARGET_DIR: target

    - name: Snippet Verification
      uses: actions-rs/cargo@v1
      with:
        command: codesnip
        args: --target=crates/competitive/src/lib.rs --filter-item=test --cfg=nightly verify --verbose --toolchain=1.42.0


  verify:
    strategy:
      fail-fast: false
      matrix:
        job-id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]

    name: Verify
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install Python dependencies
      run: |
        curl -LJO https://raw.githubusercontent.com/yosupo06/library-checker-problems/master/requirements.txt
        pip install -r requirements.txt

    - name: Setup `stable-x86_64-unknown-linux-gnu`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-x86_64-unknown-linux-gnu
        override: true
        profile: minimal

    - name: Cache
      uses: Swatinem/rust-cache@v2

    - name: cargo-build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --release --workspace --lib --tests

    - name: Verify
      env:
        RUST_MIN_STACK: 268435456
        RUST_LOG: verify=info
      run: |
        ulimit -s unlimited
        python ./.github/workflows/matrix.py ${{ matrix.job-id }}

    - name: upload artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: artifact
        path: artifact/**/*


  benchmark:
    strategy:
      fail-fast: false

    name: Benchmark
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup `stable-x86_64-unknown-linux-gnu`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-x86_64-unknown-linux-gnu
        override: true
        profile: minimal

    - name: Cache
      uses: Swatinem/rust-cache@v2

    - name: Install Gnuplot
      continue-on-error: true
      run: |
        sudo apt-get install gnuplot

    - name: Benchmark
      env:
        CRITERION_HOME: ./../../target/doc/benchmarks
      run: |
        ulimit -s unlimited
        cargo bench -p competitive_bench --bench criterion

    - name: upload artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: benchmarks
        path: target/doc/benchmarks/**/*


  generate-doc:
    needs: [verify, benchmark]
    if: github.ref == 'refs/heads/master'

    name: Generate Doc
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup `nightly-x86_64-unknown-linux-gnu`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        target: x86_64-unknown-linux-gnu
        override: true

    - name: Cache
      uses: Swatinem/rust-cache@v2

    - name: Download artifacts
      uses: actions/download-artifact@v3

    - name: Arrange artifacts
      run: cp -r artifact/* .

    - name: cargo-build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --workspace --lib --features verify_doc

    - name: cargo-doc
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --workspace --no-deps --features verify_doc
      env:
        RUSTDOCFLAGS: --html-in-header util/header.html -Z unstable-options --generate-link-to-definition

    - name: Arrange benchmarks
      run: |
        mkdir -p target/doc/benchmarks
        cp -r benchmarks/* target/doc/benchmarks

    - name: Arrange doc resources
      run: cp -r util/gh-pages/* target/doc

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GH_PAT }}
        publish_dir: ./target/doc
