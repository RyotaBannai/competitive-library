name: CI

on:
  push:
    branches:
      - '*'
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        toolchain:
          - 1.42.0-x86_64-unknown-linux-gnu
          - stable-x86_64-unknown-linux-gnu

    name: Build (${{ matrix.toolchain }})
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup `${{ matrix.toolchain }}`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.toolchain }}
        override: true
        profile: minimal
        components: rustfmt, clippy

    - name: cargo-fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: cargo-clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --lib --tests -- -D warnings

    - name: cargo-build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --workspace --lib --tests

    - name: cargo-test
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --workspace --no-fail-fast
      env:
        RUST_BACKTRACE: full

    - name: Setup cargo-snippet
      uses: actions-rs/cargo@v1
      with:
        command: install
        args: cargo-snippet --features=binaries

    - name: cargo-snippet
      uses: actions-rs/cargo@v1
      with:
        command: snippet
        args: -t vscode crates/competitive


  verify:
    strategy:
      fail-fast: false
      matrix:
        job-id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]

    name: Verify
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v2

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install online-judge-api-client

    - name: Setup `1.42.0-x86_64-unknown-linux-gnu`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.42.0-x86_64-unknown-linux-gnu
        override: true
        profile: minimal

    - name: Verify
      env:
        RUST_MIN_STACK: 268435456
        RUST_BACKTRACE: full
        RUST_LOG: verify=info
      run: |
        ulimit -s unlimited
        python ./.github/workflows/matrix.py ${{ matrix.job-id }}

    - name: upload artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: artifact
        path: artifact/**/*


  generate-doc:
    needs: verify
    if: github.ref == 'refs/heads/master'

    name: Generate Doc
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download artifacts
      uses: actions/download-artifact@v2

    - name: Arrange artifacts
      run: cp -r artifact/* .

    - name: Setup `nightly-x86_64-unknown-linux-gnu`
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-x86_64-unknown-linux-gnu
        override: true

    - name: cargo-doc
      uses: actions-rs/cargo@v1
      with:
        command: doc
        args: --workspace --no-deps --all-features
      env:
        RUSTDOCFLAGS: --html-in-header katex-header.html

    - name: Generate root index.html
      run: |
        cat <<EOT > target/doc/index.html
        <!DOCTYPE html><meta charset="utf-8"><meta http-equiv="refresh" content="0; url=competitive/index.html"><title></title>
        EOT

    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        personal_token: ${{ secrets.GH_PAT }}
        publish_dir: ./target/doc
